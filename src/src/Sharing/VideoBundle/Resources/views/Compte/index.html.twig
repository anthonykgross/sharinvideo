{% extends 'SharingVideoBundle::base.html.twig' %}



{% block body %} 
    <div class="intro">
        <div class="container">
            <div class="row">
                <div class="input-group">
                    <span class="input-group-addon" id="url-youtube">Youtube link</span> 
                    <input type="text" class="form-control" id="urlVideo" aria-describedby="url-youtube" value="" />
                    <span class="input-group-btn">
                        <button class="btn btn-default" id="btn_valid_url" type="button">Go!</button>
                    </span>
                </div>
                <div id="screen">
                    <div id="mediaplayer">
                        <span>Loading the player ...</span>
                    </div>
                </div>
                <div class="input-group">
                    <span class="input-group-addon" id="share-url">Share link</span> 
                    <input type="text" class="form-control" id="basic-url" aria-describedby="share-url" value="http://{{ app.request.host ~ path('client_user', {user: app.user.username})}}" />
                </div>
                <div class="col-lg-12">
                    <label>History</label>
                    <ul id="message"></ul>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        var master = '{{ app.user.username }}';
        var videoUrl = '';
        var timer;

        $(function(){
            $('#btn_valid_url').on('click', function(){
                videoUrl = $('#urlVideo').val();
                var videoId = getYoutubeVideoId(videoUrl);
                refreshYoutubePlayer(videoId);
                socket.emit('master_event_change', {seconds: 0, videoUrl: videoUrl,  event: 'onChange'});
            });
        });

        socket.emit('master_new', {master: master});

        socket.on('message', function(message){
            newMessage(message);
        });

        function onPlayerStateChange(event) {
            if(event.data === 1) {
                socket.emit('master_event_change', {seconds: player.getCurrentTime(), videoUrl: videoUrl,  event: 'onPlay'});

                timer = setInterval(function() {
                    socket.emit('master_event_change', {seconds: player.getCurrentTime(), videoUrl: videoUrl, event: 'onTime'});
                }, delay*1000);
            }
            if(event.data === 2) {
                socket.emit('master_event_change', {seconds: player.getCurrentTime(), videoUrl: videoUrl, event: 'onPause'});
                clearInterval(timer);
            }
            if(event.data === 3) {
                socket.emit('master_event_change', {seconds: player.getCurrentTime(), videoUrl: videoUrl, event: 'onBuffer'});
                clearInterval(timer);
            }
        }
    </script>
{% endblock %}